version: "3.7"

services:
    nginx-proxy:
        image: jwilder/nginx-proxy
        restart: unless-stopped
        volumes:
          - /var/run/docker.sock:/tmp/docker.sock:ro
          - ./config/nginx-proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
        logging:
          driver: none
    
        ports:
          - "80:80"
          - "443:443"
      
    nginx:
        image: nginx:1.16.1-alpine
        restart: unless-stopped
        volumes:
          - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:cached
        environment:
          - VIRTUAL_HOST=ecommerce.local

    back:
        build: 
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        environment:
            - CONFIGFILE=/app/cfg/config.json
            - COMPOSE_CONVERT_WINDOWS_PATHS=true          
        volumes:
            - ./../../ecommerce-back:/app/back
            - ./config/config.json:/app/cfg/config.json

        working_dir: /app/back
        ports:
            - "3890:389"
        depends_on: 
            - db
            - ldap
        command: bra run
        # platform: linux/amd64
        
    front:
        build: 
            context: .
            dockerfile: Dockerfile-front
        restart: unless-stopped
        volumes:
            - ./../../ecommerce-front:/app/front
        working_dir: /app/front
        command: npm run start
    
    db:
        image: mysql
        container_name: mysqlEco
        command: --default-authentication-plugin=mysql_native_password
        restart: unless-stopped
        environment:
          MYSQL_ROOT_PASSWORD: DifficultPassword

    phpMyAdmin:
        image: phpmyadmin/phpmyadmin:5.0.2
        restart: unless-stopped
        volumes:
            - ./config/phpmyadmin-config-user.php:/etc/phpmyadmin/config.user.inc.php:cached
        environment:      
            - PMA_PMADB=pma
            - PMA_USER=root
            - PMA_PASSWORD=DifficultPassword
            - VIRTUAL_HOST=ecommerce-db.local
        logging:
            driver: none
    
    redis:
        image: redis:5.0.3-alpine
        restart: unless-stopped
        volumes:
            - ./config/redis.conf:/usr/local/etc/redis/redis.conf:cached
        command: redis-server /usr/local/etc/redis/redis.conf
        
            
